{"version":3,"file":"component---src-pages-index-js-741e9e4f2d740aee05b9.js","mappings":"iOAiCA,MAvBA,SAAkB,GAAW,IAATA,EAAQ,EAARA,KACZC,EAAQD,EAAA,6BAAiC,gBAAGE,EAAH,cAAc,QAAd,MAC/C,EAA6BF,EAAAA,KAA7B,aAAQG,EAAR,SAAgBC,EAAhB,WACMC,EAAU,uBCbiB,SAACJ,GAClC,IAAMK,EAAc,IAApB,IAEA,OADAL,EAAAA,SAAc,gCAAoB,SAAmB,mBAAcK,EAAAA,IAAd,UAC9C,gBAAsB,cAC3B,mBAAIC,GAAkB,EACtB,aAAIC,EAAyB,EACtB,KDOqBC,CAA9B,KACMC,EAAmBL,EAAA,WAAqB,+BAAcM,KAC5D,GAAgCC,EAAAA,EAAAA,WAASF,IAAAA,EAAAA,EAAzC,GAAiBG,GAAjB,WAGA,OAFyBC,EAAAA,EAAAA,cAAY,qBAAcD,EAAd,KAArC,IAGE,yBACE,qBAAKE,MAAM,SACX,qBAAKZ,OAAL,EAAqBC,SAAUA","sources":["webpack://minseonblog/./src/pages/index.js","webpack://minseonblog/./src/utils/helpers.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout/MainLayout\";\nimport Seo from \"../components/seo\";\nimport Bio from \"../components/bio\";\nimport Post from \"../models/post\";\n\nimport { getUniqueCategories } from \"../utils/helpers\";\nimport PostTabs from \"../components/post-tabs\";\n\nfunction HomePage({ data }) {\n  const posts = data.allMarkdownRemark.edges.map(({ node }) => new Post(node));\n  const { author, language } = data.site.siteMetadata;\n  const categories = [\"All\", ...getUniqueCategories(posts)];\n  const featuredTabIndex = categories.findIndex((category) => category === \"featured\");\n  const [tabIndex, setTabIndex] = useState(featuredTabIndex === -1 ? 0 : featuredTabIndex);\n  const onTabIndexChange = useCallback((e, value) => setTabIndex(value), []);\n\n  return (\n    <Layout>\n      <Seo title=\"Home\" />\n      <Bio author={author} language={language} />\n      {/* <PostTab\n        posts={posts}\n        onChange={onTabIndexChange}\n        tabs={categories}\n        tabIndex={tabIndex}\n        showMoreButton\n      /> */}\n    </Layout>\n  );\n}\n\nexport default HomePage;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 500, truncate: true)\n          frontmatter {\n            categories\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n\n    site {\n      siteMetadata {\n        language\n        author {\n          name\n          bio {\n            role\n            description\n            thumbnail\n          }\n          social {\n            github\n            linkedIn\n            email\n          }\n        }\n      }\n    }\n  }\n`;\n","export const getUniqueCategories = (posts) => {\n  const categorySet = new Set();\n  posts.forEach(({ categories }) => categories.forEach((category) => categorySet.add(category)));\n  return [...categorySet].sort((a, b) => {\n    if (a === 'featured') return -1;\n    if (b === 'featured') return 1;\n    return 0;\n  });\n};\n"],"names":["data","posts","node","author","language","categories","categorySet","a","b","getUniqueCategories","featuredTabIndex","category","useState","setTabIndex","useCallback","title"],"sourceRoot":""}